{"version":3,"sources":["DrawBoard.js","Game.js","ReversiBoard.js","BasePlayer.js","HumanPlay.js","RandomPlay.js","index.js"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import ReversiBoard, { W, B, InvalidMoveError} from './ReversiBoard';\nimport RandomPlay from './player/RandomPlay';\n\nvar chessB = new Image();\nvar chessW = new Image();\n\nchessB.src=\"images/blackChess.png\";\nchessW.src=\"images/whiteChess.png\";\n\nexport function initialize() {\n  window.board = new ReversiBoard();\n  window.playerBlack = new RandomPlay(B);\n  window.playerWhite = null;\n\n  drawBoard();\n  checkMove();\n}\n\nexport function reset() {\n  initialize();\n}\n\nexport function drawBoard(){\n  var canvas = window.document.getElementById(\"canvas\");\n  var context = canvas.getContext(\"2d\");\n\n  for(var count = 0; count <= 320; count += 40){\n    context.beginPath();\n    context.moveTo(0,count);\n    context.lineTo(320,count);\n    context.closePath();\n    context.stroke();\n\n    context.beginPath();\n    context.moveTo(count,0);\n    context.lineTo(count,320);\n    context.closePath();\n    context.stroke();\n  }\n\n  var boardData = window.board.getBoardData();\n\n  // draw current chess\n  for(var x = 0; x < 8; x++) {\n    for(var y = 0; y < 8; y++) {\n      if (boardData[x + y * 8] != null) {\n        drawChess(context, x, y, boardData[x + y * 8])\n      }\n    }\n  }\n}\n\nexport function checkMove() {\n  var turn = window.board.getTurn();\n\n  if (turn == W) {\n    if (playerWhite != null) {\n      window.playerWhite.move(window.board);\n    }\n  }\n  else if (turn == B) {\n    if (playerBlack != null) {\n      window.playerBlack.move(window.board);\n    }\n  } else {\n    gameOver();\n  }\n\n}\n\nfunction gameOver() {\n  console.log(\"OVERRRRR\");\n}\n\nexport function touchBoard(pos){\n  var x = parseInt(pos.clientX / 40);\n  var y = parseInt(pos.clientY / 40);\n\n  if (window.board.isValidPosition(x, y)) {\n    window.board.placePiece(window.board.getTurn(), x, y);\n    drawBoard();\n  }\n\n  checkMove();\n}\n\nexport function drawChess(context, x, y, color){\n  if( color == B ){\n    context.drawImage(chessB, x * 40 + 1.5, y * 40 + 1.5);\n  } else {\n    context.drawImage(chessW, x * 40 + 1.5, y * 40 + 1.5);\n  }\n}\n","import ReversiBoard, { W, B, InvalidMoveError} from './ReversiBoard';\nimport {RandomPlay, HumanPlay} from './player';\n\nexport default class Game {\n  constructor(opts = {}) {\n    this.playerBlack = typeof opts.black == 'undefined' ? new RandomPlay(B) : new opts.black(B);\n    this.playerWhite = typeof opts.white == 'undefined' ? new RandomPlay(W) : new opts.white(W);\n    this.board = new ReversiBoard();\n  }\n\n  start() {\n    while(this.board.getTurn() != null) {\n      switch(this.board.getTurn()) {\n        case W:\n          this.playerWhite.move(this.board);\n          break;\n        case B:\n          this.playerBlack.move(this.board);\n          break;\n        default:\n          break;\n      }\n      this.board.logBoard();\n    }\n  }\n\n  reset() {\n    this.board = new ReversiBoard();\n  }\n}\n","export const W = 1, B = 2;\nexport class InvalidMoveError {};\n\nexport default class ReversiBoard {\n\n  constructor() {\n    this._boardData = (new Array(8 * 8)).fill(null);\n    this._boardData[3 + 3 * 8] = W;\n    this._boardData[4 + 3 * 8] = B;\n    this._boardData[3 + 4 * 8] = B;\n    this._boardData[4 + 4 * 8] = W;\n    this._turn = B;\n    this._clearCache();\n  }\n\n  getBoardData() {\n    return this._boardData;\n  }\n\n  getPosition(x, y) {\n    return this._boardData[x + y * 8];\n  }\n\n  getTurn() {\n    if (this.getValidPositions().length == 0) {\n      if (this._turn == B) {\n        this._turn = W;\n      } else if (this._turn == W) {\n        this._turn = B;\n      }\n\n      if (this.getValidPositions().length == 0) {\n        this._turn = null;\n      }\n    }\n\n    return this._turn;\n  }\n\n  flippedPositionsFor(x, y) {\n    // Use cache if available\n    if (typeof this._flippedPositionsCache[`${x}${y}`] === 'array') {\n      return this._flippedPositionsCache[`${x}${y}`];\n    }\n\n    var flippedPositions = [];\n    var currentBoardData = this.getBoardData();\n\n    if (currentBoardData[x + y * 8] != null) {\n      // Placing on a position that already has something on it is invalid, and\n      // yet will flip nothing, so just leave flippedPositions blank without\n      // doing anything else\n    } else {\n      for (let i=0; i<8; i++) {\n        for (let j=0; j<8; j++) {\n          if (this.willPositionFlip(i, j, x, y)) {\n            flippedPositions.push([i, j]);\n          }\n        }\n      }\n    }\n\n    // Keep the results in cache\n    this._flippedPositionsCache[`${x}${y}`] = flippedPositions;\n\n    return flippedPositions;\n  }\n\n  willPositionFlip(x, y, px, py) {\n    var currentBoardData = this.getBoardData();\n\n    // Placing on a position that already has something on it is invalid, and\n    // yet will flip nothing\n    if (currentBoardData[px + py * 8] != null) return false;\n\n    // Use cache if available\n    if (typeof this._flippedPositionsDataCache[`${px}${py}`] === 'array') {\n      return this._flippedPositionsDataCache[`${px}${py}`][x + y * 8];\n    }\n\n    var currentTurn = this._turn;\n    var flippedPositionsDataForPxPy = (new Array(8 * 8)).fill(false);\n\n    for (let dx=-1; dx<=1; dx++) {\n      for (let dy=-1; dy<=1; dy++) {\n        if (dx == 0 && dy == 0) continue;\n\n        let searchFootprints = [];\n        let searchMove = 1;\n\n        while (true) {\n          let searchPositionX = px + dx * searchMove;\n          let searchPositionY = py + dy * searchMove;\n          let searchPosition = currentBoardData[searchPositionX + searchPositionY * 8];\n\n          if (searchPositionX < 0 || searchPositionY < 0 || searchPositionX >= 8 || searchPositionY >= 8) {\n            break;\n          } else if (searchPosition != B && searchPosition != W) {\n            break;\n\n          } else if (searchPosition != currentTurn) {\n            searchFootprints.push([searchPositionX, searchPositionY]);\n\n          } else if (searchPosition == currentTurn) {\n            searchFootprints.forEach((searchFootprint) => {\n              flippedPositionsDataForPxPy[searchFootprint[0] + searchFootprint[1] * 8] = true;\n            });\n            break;\n          }\n\n          searchMove++;\n        }\n      }\n    }\n\n    // Keep the calculated data in cache\n    this._flippedPositionsDataCache[`${px}${py}`] = flippedPositionsDataForPxPy;\n\n    return flippedPositionsDataForPxPy[x + y * 8];\n  }\n\n  getValidPositions() {\n    // Use cache if available\n    if (typeof this._validPositionsCache === 'array') {\n      return this._validPositionsCache;\n    }\n\n    var validPositions = [];\n\n    for (let i=0; i<8; i++) {\n      for (let j=0; j<8; j++) {\n        if (this.isValidPosition(i, j)) {\n          validPositions.push([i, j]);\n        }\n      }\n    }\n\n    // Keep the data in cache\n    this._validPositionsCache = validPositions;\n\n    return validPositions;\n  }\n\n  isValidPosition(x, y) {\n    return (this.flippedPositionsFor(x, y).length > 0);\n  }\n\n  getScore(color) {\n    if (typeof this._scoreCache[color] !== 'undefined') {\n      return this._scoreCache[color];\n    }\n\n    var score = 0;\n\n    for (let i=0; i<(8*8); i++) {\n      if (this._boardData[i] == color) {\n        score++;\n      }\n    }\n\n    this._scoreCache[color] = score;\n\n    return score;\n  }\n\n  placePiece(color, x, y) {\n    if (color != this.getTurn()) throw new InvalidMoveError();\n    if (!this.isValidPosition(x, y)) throw new InvalidMoveError();\n\n    var positionsToFlip = this.flippedPositionsFor(x, y);\n\n    this._boardData[x + y * 8] = color;\n    positionsToFlip.forEach((flippedPosition) => {\n      this._boardData[flippedPosition[0] + flippedPosition[1] * 8] = color;\n    });\n\n    if (color == W) {\n      this._turn = B;\n    } else if (color == B) {\n      this._turn = W;\n    }\n\n    this._clearCache();\n  }\n\n  setBoardDataForTesting(boardData) {\n    this._boardData = boardData;\n    this._clearCache();\n  }\n\n  setTurnForTesting(turn) {\n    this._turn = turn;\n    this._clearCache();\n  }\n\n  _clearCache() {\n    this._flippedPositionsDataCache = {};\n    this._flippedPositionsCache = {};\n    this._validPositionsCache = undefined;\n    this._scoreCache = {};\n  }\n\n  logBoard() {\n    var p = (c) => {\n      if (c == null) return ' ';\n      if (c == B) return 'X';\n      if (c == W) return 'O';\n    }\n\n    var b = this._boardData;\n\n    console.log('  0 1 2 3 4 5 6 7');\n    for (let i=0; i<8; i++) {\n      let line = [i];\n      for (let j=0; j<8; j++) {\n        line.push(p(b[i * 8 + j]));\n      }\n      console.log(line.join(' '));\n    }\n  }\n}\n","export default class BasePlayer {\n  constructor(color) {\n    this.color = color;\n  }\n}\n","import BasePlayer from './BasePlayer';\nimport readlineSync from 'readline-sync';\n\nexport default class HumanPlay extends BasePlayer {\n  move(board) {\n    var line = readlineSync.question('Enter position(x,y): ');\n    var strs = line.trim().split(',')\n    board.placePiece(this.color, parseInt(strs[0]), parseInt(strs[1]));\n    return board;\n  }\n}\n","import BasePlayer from './BasePlayer';\n\nexport default class RandomPlay extends BasePlayer {\n\n  move(board) {\n    var validPositions = board.getValidPositions();\n    var pos = validPositions[this.randomPick(0, validPositions.length-1)];\n    board.placePiece(this.color, pos[0], pos[1]);\n    return board;\n  }\n\n  randomPick(min, max) {\n    return Math.floor(Math.random()*(max-min+1)+min);\n  }\n}\n","import RandomPlay from './RandomPlay';\nimport HumanPlay from './HumanPlay';\n\nmodule.exports = {\n  RandomPlay,\n  HumanPlay\n}\n"]}